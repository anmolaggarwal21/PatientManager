// <auto-generated />
using System;
using DeviceManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeviceManager.Migrations
{
    [DbContext(typeof(PatientManagementDbContext))]
    [Migration("20231210093223_changedPatientEntityForDateChange")]
    partial class changedPatientEntityForDateChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("Entities.PatientEntity", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<string>("AttendingPhysicianFullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AttendingPhysicianNPI")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("DiagnosisCode1")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosisCode2")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosisCode3")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosisCode4")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosisCode5")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosisCode6")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferringPhysicianFullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferringPhysicianNPI")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("PatientEntities");
                });

            modelBuilder.Entity("Entities.ProviderEntity", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("NPI")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProviderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TaxId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProviderId");

                    b.ToTable("ProviderEntities");
                });

            modelBuilder.Entity("Entities.PatientEntity", b =>
                {
                    b.HasOne("Entities.ProviderEntity", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
